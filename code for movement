//Essential libraries
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include "Movement.h"


RF24 radio(7, 8); // CE, CSN pins

const byte address[6] = "00001";//match address byte on transmitter and receiver

struct JoystickData { //same construction for joystick as receiver
  int x;
  int y;
};

int enA = 5;
int in1 = 4;
int in2 = 3;

int enB = 3;
int in3 = 10;
int in4 = 11;

void setup() {
  Serial.begin(9600);
  delay(100);
  
  if(radio.begin()) {
    Serial.println("CONNECTED!");
  } else {
    Serial.println("Not connect Radio");
  };

  radio.openReadingPipe(1, address);//the receiver gets designated as a receiver on the same address
  radio.setPALevel(RF24_PA_MIN);
  radio.startListening();
};

void loop() {
  //Serial.println("Printing Works");
  //Serial.println(radio.available());
  if (radio.available()) {//checks if there is data that can be read
    int values;//can read up to 32 bytes
    radio.read(&values, sizeof(values));//takes the transmission and pastes into the variable
    Serial.print("Y: ");
    Serial.println(values);
    
    if (y > CENTER + DEADZONE){
      forward(in3, in4);
      forward(in1, in2);
      int speed = map(y, CENTER + DEADZONE, 1023, MIN_SPEED, MAX_SPEED);
      analogWrite(enB, speed);
      analogWrite(enA, speed);
    } else if (y < CENTER - DEADZONE){
      back(in3, in4);
      back(in1, in2);
      int speed = map(y, CENTER + DEADZONE, 1023, MIN_SPEED, MAX_SPEED);
      analogWrite(enB, speed);
      analogWrite(enA, speed);
    } else{
      stop(in1, in2);
      stop(in3, in4);
    }
    
    } 
    delay(100);
  }
